unit vendas;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf, Data.DB, Vcl.Grids, Vcl.DBGrids,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, UVendaControl, uEnumerado;

type
  TFrmPrincipal = class(TForm)
    Label1: TLabel;
    edtCodigo: TEdit;
    edtNome: TEdit;
    Label2: TLabel;
    Button4: TButton;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    DBGrid1: TDBGrid;
    Label3: TLabel;
    Edit1: TEdit;
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure DBGrid1KeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure DBGrid1MouseUp(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
  private
    FControleCliente: TClienteControl;

    procedure CarregarClientes;
    procedure CarregarEdits;
  end;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmPrincipal: TFrmPrincipal;

implementation

{$R *.dfm}

{ TFrmPrincipal }

procedure TFrmPrincipal.Button1Click(Sender: TObject);
begin
  FControleCliente.ClienteModel.Acao   := uEnumerado.tacIncluir;
  FControleCliente.ClienteModel.Nome   := edtNome.Text;
  if FControleCliente.Salvar() then
    ShowMessage('Incluido com sucesso.');
  Self.CarregarClientes();

end;

procedure TFrmPrincipal.Button2Click(Sender: TObject);
begin
  FControleCliente.ClienteModel.Acao   := uEnumerado.tacAlterar;
  FControleCliente.ClienteModel.Codigo := StrToInt(edtCodigo.Text);
  FControleCliente.ClienteModel.Nome   := edtNome.Text;
  if FControleCliente.Salvar() then
    ShowMessage('Alterado com sucesso.');
  Self.CarregarClientes();

end;

procedure TFrmPrincipal.Button3Click(Sender: TObject);
begin
  VCodigo := InputBox('Excluir', 'Digite o código do Cliente', EmptyStr);

  if VCodigo.Trim <> EmptyStr then
  begin
    if (Application.MessageBox(PChar('Deseja excluir o registro?'), 'Confirmação', MB_YESNO
      + MB_DEFBUTTON2 + MB_ICONQUESTION) = mrYes) then
    begin
      FControleCliente.ClienteModel.Acao   := uEnumerado.tacExcluir;
      FControleCliente.ClienteModel.Codigo := StrToInt(edtCodigo.Text);
      if FControleCliente.Salvar() then
        ShowMessage('Excluido com sucesso.');
      Self.CarregarClientes();
    end;
  end;

end;

procedure TFrmPrincipal.Button4Click(Sender: TObject);
begin
  FControleCliente.ClienteModel.Codigo := FControleCliente.ClienteModel.GetId(1);
  edtCodigo.Text := FControleCliente.ClienteModel.Codigo.ToString();
  edtNome.Clear;
  edtNome.SetFocus();

end;

procedure TFrmPrincipal.DBGrid1KeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  Self.CarregarEdits();

end;

procedure TFrmPrincipal.DBGrid1MouseUp(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Self.CarregarEdits();

end;

procedure TFrmPrincipal.FormCreate(Sender: TObject);
begin
  FControleCliente := TClienteControl.Create;

end;

procedure TFrmPrincipal.FormShow(Sender: TObject);
begin
  Self.CarregarClientes();

  if mmTableClientes.RecordCount > 0 then
  begin
    Self.CarregarEdits();
  end;

end;

end.
